name: Publish Docker Container

on:
  push:
    tags: [ 'v*' ]
    branches: [ "master" ]
  workflow_dispatch:

env:
  IMAGE_DHUB: ${{ vars.IMAGE_DHUB }}
  IMAGE_GHCR: ${{ github.repository }}
  REGISTRY_DHUB: docker.io
  REGISTRY_GHCR: ghcr.io
  TARGET: xplex

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Log into registry ${{ env.REGISTRY_DHUB }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY_DHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.RW_DOCKERHUB }}
      - name: Log into registry ${{ env.REGISTRY_GHCR }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: |
            ${{ env.REGISTRY_DHUB }}/${{ env.IMAGE_DHUB }}
            ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_GHCR }}
          tags: |
            type=sha,enable=true,format=short
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          target: ${{ env.TARGET }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm/v5
      - name: Sign the published Docker image
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
